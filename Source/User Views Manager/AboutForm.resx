<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>